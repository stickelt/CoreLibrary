@page "/"
@namespace Stickelt.CoreComponents.Components
@using Stickelt.CoreComponents.Services
@using Microsoft.Extensions.Configuration

@inject IConfigurationService ConfigService

<PageTitle>Home</PageTitle>

@if(string.IsNullOrEmpty(ApplicationNameFromConfig) && string.IsNullOrEmpty(ApplicationName))
{
    <h3>Configuration is null</h3>
}
else 
{
    <h1>@(ApplicationNameFromConfig ?? ApplicationName ?? "Application Name Not Found")</h1>
    
    <h1>Hello, world!</h1>

    <p>Welcome to your new app.</p>
}

@code {
    // Optional parameters that can be passed from the consuming application
    [Parameter]
    public string Title { get; set; } = "Home";

    [Parameter]
    public string ApplicationName { get; set; } = "";
    
    private string ApplicationNameFromConfig { get; set; }

    protected override void OnInitialized()
    {
        try 
        {
            // Try to get the application name from configuration
            var appSettings = ConfigService.GetSection("AppSettings");
            if (appSettings != null)
            {
                ApplicationNameFromConfig = appSettings["ApplicationName"];
            }
        }
        catch
        {
            // Silently handle any configuration errors
            ApplicationNameFromConfig = null;
        }
        
        base.OnInitialized();
    }
}
